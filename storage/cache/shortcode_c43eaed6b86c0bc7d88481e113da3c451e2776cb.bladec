<div id="fhm-heatmap"></div>

<!-- Optional: include Chart.js from CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
(async function() {
 const container = document.getElementById('fhm-heatmap');

 async function fetchData() {
 try {
 const res = await fetch('<?php echo esc_url(rest_url('fhm/v1/data')); ?>');
 const data = await res.json();
 return data;
 } catch (err) {
 console.error('Error fetching heatmap data:', err);
 return null;
 }
 }

 function renderHeatmap(data) {
 // Clear container
 container.innerHTML = '';

 if (!data) return;

 const table = document.createElement('table');
 table.style.borderCollapse = 'collapse';
 table.style.width = '100%';

 // Create table header (timeframes)
 const timeframes = Object.keys(data[Object.keys(data)[0]]); // take first pair
 const thead = document.createElement('thead');
 const trHead = document.createElement('tr');
 trHead.innerHTML = '<th>Pair</th>';
 timeframes.forEach(tf => {
 trHead.innerHTML += `<th>${tf} min</th>`;
 });
 thead.appendChild(trHead);
 table.appendChild(thead);

 // Create table body
 const tbody = document.createElement('tbody');
 for (let pair in data) {
 const tr = document.createElement('tr');
 tr.innerHTML = `<td>${pair}</td>`;

 timeframes.forEach(tf => {
 const open = parseFloat(data[pair][tf].open);
 const close = parseFloat(data[pair][tf].close);
 const change = close - open; // pip change
 const color = change > 0 ? '#4caf50' : change < 0 ? '#f44336' : '#ccc';
 tr.innerHTML += `<td style="background:${color};color:#fff;text-align:center;">${change.toFixed(4)}</td>`;
 });

 tbody.appendChild(tr);
 }

 table.appendChild(tbody);
 container.appendChild(table);
 }

 // Initial load
 let heatmapData = await fetchData();
 renderHeatmap(heatmapData);

 // Auto-update every minute
 setInterval(async () => {
 heatmapData = await fetchData();
 renderHeatmap(heatmapData);
 }, 60000);
})();
</script>
